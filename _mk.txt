# Flask, без rest api + Tailwind
mk:
  # topics
  # ├── test
  # │   ├── notes
  # │   │   └── mk.wiki
  # │   ├── questions
  # │   │   ├── multi
  # │   │   │   ├── 0_cmds.txt
  # │   │   │   └── 1_scripts.txt
  # │   │   ├── selects.csv
  # │   │   └── singels.csv
  # │   └── theory.txt
  # └── topics.csv

  index:
    show progress
    show topics
  topic:
    get batch
      load user progress
    show batch:
      identify q_type
        render q_type
  tipic-post:
    check_answer
    save progress


  templates and routs for all question types and their modes:
    selects
    singels:
      f: dnd
      abcd: input
    multi:
      f: dnd
      abcd: input
      # <pre>
      #   {{ content }}
      # </pre>
      # <div id='dnd'>...</div>
      # <input id='input' type='text' value=''>
  apply user progress and stats
  apply styles
  apply js-dynamic
  apply hotkeys

todo:
  добавить зубрежку
    тупо текст, на фронте не скрывать длину пропущеных слов
    level 1: 3 раунда увеличивать количество пропусков
  edit question feature:
    система обновления вопросов - сносить прогрес, не сносить id вопроса
    запоминать не сколько раз праивльно ответил на вопрос, а сколько раз конкретных версий ответов было дано
  добавить альтернативные ответы
nice-todo:
  догонялки:
    input. level 3: тоже самое +догонялки: убежать от тени, при ошибке отбрасывать на слово назад
    table. level 2: тоже самое +догонялки: убежать от тени, при ошибке отбрасывать на слово назад
