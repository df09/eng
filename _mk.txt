mk:
  suspicious (q_choose/q_input/q_fill):
    # suspicious.csv:
    #   id, id_topic, q_kind, qestion_id, suspicious_status , suspicious_note
    #   suspicious_status:
    #     0 - все нормльно
    #     1 - подозрительный вопрос, нужно пересмотреть, внести поправки
    #     2 - пересмотрен поправки внесены
    #   suspicious_note: уточнение на что стоит обратить внимание

    добавить кнопку "suspicious" - открывается форма:
      - с input куда вносится suspicious_note (не обязательно)
      - с кнопкой "send" - которая будет:
          - отправлять данные в flask (без редиректа), которые будут обработы на бекенде
          - закрывать окно
          - обновлять рендеринг:
              suspicious в статистике
              деактивировать кнопку "suspicious" и поменять ее название на "is suspicious"

    каждый раз при открытии главной страницы:
      валидация базы с попросами: проверка чтобы tid,q_kind,qid были уникальными
      обновление прогресса пользователей из-за изменениях в базе с вопросами:
        suspicious:
          везде где suspicious_status = 2
            сносить прогресс у всех пользователей для этого tid,q_kind,qid
            устнановить suspicious_status = 0, note = ''
        обработчик если вопрос был удален:
          получить список всех tid,q_kind,qid
          сверять с прогрессом каждого пользователя
            если у пользователя есть tid,q_kind,qid которого нет в этом списке:
              удалять прогресс
# backlog:
#   теория:
#      сслыка на теорию в конец
#      выжимка из теории: в theory.txt раставить флаги q_kind,qid:
#        чтобы начиная от флага и до следующего флага или конца файла
#        показывалась выше ссылки на всю теорию
#   add topic extra: сслыки на внешние источники
#   добавить сортировку по наименее изученным топикам
#   totals - работает, skip
#     id, id_topic, total
#     # складывать totals сюда
#     # удалить тотал из stats
#     # удалить _total файлы из топиков
#     # подргужать в темплейты из topics.totals
#   speling skills:
#     или догонялки? потому что логика выглядит похожей - обдумать.
#     q_input:  B+ целиком пропечатывать предложение, отбрасывая на слово назад при опечатке
#     q_fill:   B+ рандомизировать инпуты
#     q-speech: добавить зубрежку - тупо текст,
#               целиком пропечатывать, отбрасывая на слово назад при опечатке
#               постепенно увеличивая количество пропущенных слов
#   q-догонялки:
#     input. level 3: тоже самое +догонялки: убежать от тени, при ошибке отбрасывать на слово назад
#     table. level 2: тоже самое +догонялки: убежать от тени, при ошибке отбрасывать на слово назад
